plugins {
    id "multiloader-loader"
    id "fabric-loom"
}
dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${parchment_minecraft}:${parchment_version}@zip")
    }

    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}+${minecraft_version}"

    // Dependencies we use for this mod to run as we expect it to.
    modImplementation "com.teamresourceful.resourcefulconfig:resourcefulconfig-fabric-1.21:${resourceful_config_fabric_version}"
    // Optional
    modImplementation "maven.modrinth:jade:${jade_fabric_version}+fabric"
    modImplementation "com.terraformersmc:modmenu:${modmenu_version}"
}

loom {
    def aw = project(":common").file("src/main/resources/META-INF/${mod_id}.accesswidener")
    if (aw.exists()) {
        accessWidenerPath.set(aw)
    }
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("runs/client")

            if (project.hasProperty("mc_uuid")) {
                programArgs("--uuid", project.mc_uuid)
            }

            if (project.hasProperty("mc_username")) {
                programArgs("--username", project.mc_username)
            }
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("runs/server")
        }
    }
}
