plugins {
    id "multiloader-loader"
    id "net.neoforged.moddev"
}

neoForge {
    version = neoforge_version
    // If they exist, access transformers are automatically detected now.
    parchment {
        minecraftVersion = parchment_minecraft
        mappingsVersion = parchment_version
    }

    runs {
        configureEach {
            systemProperty("neoforge.enabledGameTestNamespaces", mod_id)
            ideName = "NeoForge ${it.name.capitalize()} (${project.path})" // Unify the run config names with fabric
        }
        client {
            client()

            if (project.hasProperty("mc_uuid")) {
                programArguments.addAll "--uuid", mc_uuid
            }

            if (project.hasProperty("mc_username")) {
                programArguments.addAll "--username", mc_username
            }
        }
        data {
            data()
            programArguments.addAll("--mod", mod_id, "--all", "--output", file("../common/src/generated/resources").absolutePath, "--existing", file("../common/src/main/resources").absolutePath)
        }
        server {
            server()
        }
    }
    mods {
        "${mod_id}" {
            sourceSet sourceSets.main
        }
    }
}

dependencies {
    // Dependencies we require for this mod to run as we expect it to.
    implementation "com.teamresourceful.resourcefulconfig:resourcefulconfig-neoforge-1.21:${resourceful_config_neoforge_version}"

    // Optional
    implementation "maven.modrinth:jade:${jade_neoforge_version}+neoforge"
}

sourceSets.main.resources { srcDir "src/generated/resources" }
